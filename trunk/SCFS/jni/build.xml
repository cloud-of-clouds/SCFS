<?xml version="1.0"?>

<!--
     a sub project ANT file to build JNI part of FUSE-J bindings
     allways to be called from main build.xml file since it
     inherits all properties and references from it
-->

<project name="fuse-j-jni" basedir="." default="all">

   <target name="init">

      <!-- if not inherited from parent build.xml -->
      <property name="fuse.home" value="/usr/local"/>
      <property name="jdk.home" value="${java.home}/.."/>
      <property name="lib.so" value="libjavafs.so"/>

      <fileset id="src.files" dir=".">
         <include name="*.c"/>
         <include name="*.h"/>
      </fileset>

      <pathconvert pathsep=" " property="c.files">
         <path>
            <fileset dir=".">
               <include name="*.c"/>
            </fileset>
         </path>
      </pathconvert>

      <property
         name="includes"
         value="-I${fuse.home}/include -I${jdk.home}/include -I${jdk.home}/include/linux"/>

      <pathconvert pathsep=" -L" property="_ldpath">
         <path path="${java.library.path}"/>
      </pathconvert>
      <property name="ldpath" value="-L${_ldpath} -L${fuse.home}/lib"/>

   </target>


   <!-- compiles JNI native code -->
   <target name="all" depends="compile"/>


   <target name="compile" depends="init,compile-check" unless="compile.notneeded">

      <exec executable="gcc" dir="." failonerror="true">
         <arg value="-fPIC"/>
         <arg value="-shared"/>
         <arg value="-D_FILE_OFFSET_BITS=64"/>
         <arg value="-o"/>
         <arg value="${lib.so}"/>
         <arg line="${includes}"/>
         <arg line="${ldpath}"/>
         <arg value="-ljvm"/>
         <arg value="-lfuse"/>
         <arg value="-lpthread"/>
         <arg line="${c.files}"/>
      </exec>

   </target>


   <target name="compile-check">

      <uptodate property="compile.notneeded" targetfile="${lib.so}">
         <srcfiles refid="src.files"/>
      </uptodate>

   </target>


   <!-- Clean everything -->
   <target name="clean" depends="init">
      <delete file="${lib.so}"/>
   </target>

</project>
